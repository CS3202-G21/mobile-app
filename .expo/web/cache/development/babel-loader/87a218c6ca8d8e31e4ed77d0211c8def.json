{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { makeObservable, observable, action, flow, runInAction } from 'mobx';\nimport * as SecureStore from 'expo-secure-store';\n\nvar AuthStore = function () {\n  function AuthStore() {\n    _classCallCheck(this, AuthStore);\n\n    this.isAuthenticated = false;\n    this.userToken = undefined;\n    this.getToken();\n    this.username = '';\n    this.fName = '';\n    this.lName = '';\n    this.email = '';\n    this.password = '';\n    makeObservable(this, {\n      isAuthenticated: observable,\n      userToken: observable,\n      username: observable,\n      fName: observable,\n      lName: observable,\n      email: observable,\n      password: observable,\n      reset: action,\n      login: flow,\n      logout: flow,\n      getToken: flow\n    });\n  }\n\n  _createClass(AuthStore, [{\n    key: \"getToken\",\n    value: function getToken() {\n      var _this = this;\n\n      return _regeneratorRuntime.async(function getToken$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(SecureStore.getItemAsync('userToken'));\n\n            case 3:\n              this.userToken = _context.sent;\n              console.log(this.userToken);\n              runInAction(function () {\n                if (_this.userToken !== null) {\n                  _this.isAuthenticated = true;\n                } else {\n                  _this.isAuthenticated = false;\n                }\n              });\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n              runInAction(function () {\n                _this.isAuthenticated = false;\n              });\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, [[0, 8]], Promise);\n    }\n  }, {\n    key: \"setUsername\",\n    value: function setUsername(username) {\n      this.username = username;\n    }\n  }, {\n    key: \"setFName\",\n    value: function setFName(fName) {\n      this.fName = fName;\n    }\n  }, {\n    key: \"setLName\",\n    value: function setLName(lName) {\n      this.lName = lName;\n    }\n  }, {\n    key: \"setEmail\",\n    value: function setEmail(email) {\n      this.email = email;\n    }\n  }, {\n    key: \"setPassword\",\n    value: function setPassword(password) {\n      this.password = password;\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this.username = '';\n      this.fName = '';\n      this.lName = '';\n      this.email = '';\n      this.password = '';\n    }\n  }, {\n    key: \"login\",\n    value: _regeneratorRuntime.mark(function login() {\n      var _this2 = this;\n\n      return _regeneratorRuntime.wrap(function login$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              console.log(this.username, this.password);\n              return _context2.abrupt(\"return\", fetch('http://192.168.122.1:8000/api/auth/customer/login', {\n                method: 'POST',\n                headers: {\n                  Accept: 'application/json',\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                  username: this.username,\n                  password: this.password\n                })\n              }).then(function (response) {\n                console.log(response.token);\n                var userToken = response.token;\n\n                try {\n                  SecureStore.setItemAsync('userToken', _this2.userToken);\n                  _this2.isAuthenticated = true;\n                } catch (e) {\n                  console.log(e);\n                }\n              }));\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, login, this);\n    })\n  }, {\n    key: \"logout\",\n    value: _regeneratorRuntime.mark(function logout() {\n      return _regeneratorRuntime.wrap(function logout$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              this.userToken = undefined;\n              this.username = '';\n              this.fName = '';\n              this.lName = '';\n              this.email = '';\n              this.password = '';\n              this.isAuthenticated = false;\n              SecureStore.deleteItemAsync('userToken');\n              console.log('hi', this.userToken);\n              return _context3.abrupt(\"return\", Promise.resolve());\n\n            case 10:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, logout, this);\n    })\n  }]);\n\n  return AuthStore;\n}();\n\nexport var authStore = new AuthStore();","map":{"version":3,"sources":["/home/windy/dev/Sem/mobile-app/stores/AuthStore.js"],"names":["makeObservable","observable","action","flow","runInAction","SecureStore","AuthStore","isAuthenticated","userToken","undefined","getToken","username","fName","lName","email","password","reset","login","logout","getItemAsync","console","log","fetch","method","headers","Accept","body","JSON","stringify","then","response","token","setItemAsync","e","deleteItemAsync","Promise","resolve","authStore"],"mappings":"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","sourcesContent":["import { makeObservable, observable, action, flow, runInAction } from 'mobx';\nimport * as SecureStore from 'expo-secure-store';\n\nclass AuthStore {\n  userToken;\n  isAuthenticated;\n  username;\n  fName;\n  lName;\n  email;\n  password;\n\n  constructor() {\n    this.isAuthenticated = false;\n    this.userToken = undefined;\n    this.getToken();\n    this.username = '';\n    this.fName = '';\n    this.lName = '';\n    this.email = '';\n    this.password = '';\n\n    makeObservable(this, {\n      isAuthenticated: observable,\n      userToken: observable,\n      username: observable,\n      fName: observable,\n      lName: observable,\n      email: observable,\n      password: observable,\n      reset: action,\n      login: flow,\n      logout: flow,\n      getToken: flow,\n    });\n  }\n\n  async getToken() {\n    try {\n      this.userToken = await SecureStore.getItemAsync('userToken');\n      console.log(this.userToken);\n      runInAction(() => {\n        if (this.userToken !== null) {\n          this.isAuthenticated = true;\n        } else {\n          this.isAuthenticated = false;\n        }\n      });\n    } catch (e) {\n      runInAction(() => {\n        this.isAuthenticated = false;\n      });\n    }\n  }\n  setUsername(username) {\n    this.username = username;\n  }\n\n  setFName(fName) {\n    this.fName = fName;\n  }\n\n  setLName(lName) {\n    this.lName = lName;\n  }\n\n  setEmail(email) {\n    this.email = email;\n  }\n\n  setPassword(password) {\n    this.password = password;\n  }\n  reset() {\n    this.username = '';\n    this.fName = '';\n    this.lName = '';\n    this.email = '';\n    this.password = '';\n  }\n  *login() {\n    console.log(this.username, this.password);\n    return fetch('http://192.168.122.1:8000/api/auth/customer/login', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        username: this.username,\n        password: this.password,\n      }),\n    }).then((response) => {\n      console.log(response.token);\n      const userToken = response.token;\n      try {\n        SecureStore.setItemAsync('userToken', this.userToken);\n        this.isAuthenticated = true;\n      } catch (e) {\n        console.log(e);\n      }\n    });\n  }\n  *logout() {\n    this.userToken = undefined;\n    this.username = '';\n    this.fName = '';\n    this.lName = '';\n    this.email = '';\n    this.password = '';\n    this.isAuthenticated = false;\n    SecureStore.deleteItemAsync('userToken');\n    console.log('hi', this.userToken);\n    return Promise.resolve();\n  }\n}\nexport const authStore = new AuthStore();\n"]},"metadata":{},"sourceType":"module"}